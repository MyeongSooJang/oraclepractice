-- 3.도서명이 25자 이상인 책 번호와 도서명을 화면에 출력하는 SQL 문을 작성하시오.
SELECT *
FROM TB_BOOK
WHERE LENGTH(BOOK_NM)>=25;

-- 4. 휴대폰 번호가 ‘019’로 시작하는 김씨 성을 가진 작가를 이름순으로 정렬했을 때 가장 먼저 표시되는 작가
-- 이름과 사무실 전화번호, 집 전화번호, 휴대폰 전화번호를 표시하는 SQL 구문을 작성하시오.

SELECT *
FROM 
(SELECT *
FROM TB_WRITER
WHERE WRITER_NM LIKE '김%' AND MOBILE_NO LIKE '019%'
ORDER BY WRITER_NM)
WHERE ROWNUM =1;

-- 5. 저작 형태가 “옮김”에 해당하는 작가들이 총 몇 명인지 계산하는 SQL 구문을 작성하시오. (결과 헤더는“작가(명)”으로 표시되도록 할 것)

SELECT COUNT(DISTINCT WRITER_NO) AS 작가명
FROM TB_BOOK
JOIN TB_BOOK_AUTHOR USING (BOOK_NO)
WHERE COMPOSE_TYPE = '옮김';

-- DISTINCT SQL에서 중복된 값을 제거하고 고유한 값만을 반환 필터링한다.

--6. 300권 이상 등록된 도서의 저작 형태 및 등록된 도서 수량을 표시하는 SQL 구문을 작성하시오.(저작형태가 등록되지 않은 경우는 제외할 것)

SELECT COMPOSE_TYPE, COUNT(*)
FROM TB_BOOK
JOIN TB_BOOK_AUTHOR USING (BOOK_NO)
GROUP BY COMPOSE_TYPE
HAVING COUNT(*) >= 300 AND COMPOSE_TYPE IS NOT NULL;

-- 7. 가장 최근에 발간된 최신작 이름과 발행일자, 출판사 이름을 표시하는 SQL 구문을 작성하시오.

SELECT BOOK_NM, ISSUE_DATE, PUBLISHER_NM
FROM(
SELECT * 
FROM TB_BOOK
ORDER BY BOOK_NO DESC)
WHERE ROWNUM =1;

-- 8. 가장 많은 책을 쓴 작가 3명의 이름과 수량을 표시하되, 많이 쓴 순서대로 표시하는 SQL 구문을 작성하시오. 단, 동명이인(同名異人) 작가는 없다고 가정한다. 
-- (결과 헤더는 “작가 이름”, “권 수”로 표시되도록 할것)
SELECT *
FROM(
SELECT PUBLISHER_NM AS 작가, COUNT(*) AS "권 수"
FROM TB_BOOK
GROUP BY PUBLISHER_NM
ORDER BY "권 수"DESC)
WHERE ROWNUM <4;

-- 9. 작가 정보 테이블의 모든 등록일자 항목이 누락되어 있는 걸 발견하였다. 누락된 등록일자 값을 각 작가의 ‘최초 출판도서의 발행일과 동일한 날짜’
-- 로 변경시키는 SQL 구문을 작성하시오. (COMMIT 처리할 것)

UPDATE TB_WRITER W
SET REGIST_DATE = (
    SELECT MIN(B.ISSUE_DATE)
    FROM TB_BOOK_AUTHOR BA
    JOIN TB_BOOK B ON BA.BOOK_NO = B.BOOK_NO
    WHERE BA.WRITER_NO = W.WRITER_NO
);
// 작가
COMMIT;
ROOL

;
SELECT * FROM TB_BOOK_AUTHOR;
SELECT * FROM TB_WRITER;
SELECT * FROM TB_BOOK;
SELECT * FROM TB_PUBLISHER;


