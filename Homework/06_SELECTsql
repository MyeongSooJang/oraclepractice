-- 문제 1
-- 기술지원부에 속한 사람들의 사람의 이름, 부서코드, 급여를 출력하시오

SELECT EMP_NAME AS 이름 , DEPT_CODE AS 부서코드 , SALARY AS 급여
FROM EMPLOYEE;

-- 문제 2
-- 기술지원부에 속한 사람들 중 가장 연봉이 높은 사람의 이름,부서코드, 급여를 출력하시오

SELECT 이름, 부서코드, 부서명, 급여
FROM(
SELECT EMP_NAME AS 이름 , DEPT_CODE AS 부서코드, DEPT_TITLE AS 부서명 , SALARY AS 급여, ROWNUM AS 순번
FROM EMPLOYEE
JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
WHERE DEPT_TITLE ='기술지원부'
ORDER BY 급여 DESC
)
-- WHERE 순번 =1;
--> ROWNUM 값이 서브 쿼리에서 먼저 처리가 된다 -> 그후 순번 =1 조건이 필터링
--> 아직 ORDER BY가 되지 않으므로 제일 높은 급여를 받는 사람을 가지고 오지 못함

WHERE ROWNUM =1;
-- > 급여가 가장 높은 직원만 가지고 오는 것

-- 3. 매니저가 있는 사원중에 월급이 전체사원을 평균을 넘고 사번, 이름, 매니저, 월급을 구하시오
-- JOIN을 이용해서 하기

SELECT E.EMP_ID, E.EMP_NAME, M.EMP_NAME AS 매니저, E.SALARY
FROM EMPLOYEE E
JOIN EMPLOYEE M ON  E.MANAGER_ID = M.EMP_ID
WHERE E.SALARY >(SELECT AVG(SALARY) FROM EMPLOYEE);

-- JOIN을 사용하지 않고 해보기

SELECT E.EMP_ID, E.EMP_NAME , E.SALARY,
(SELECT EMP_NAME
FROM EMPLOYEE
WHERE EMP_ID = E.MANAGER_ID) AS 매니저
FROM EMPLOYEE E
WHERE MANAGER_ID IS NOT NULL AND SALARY > (SELECT AVG(SALARY) FROM EMPLOYEE);

-- 문제 4 같은 직급의 평균급여보다 같거나 많은 급여를 받는 직원의 이름, 직급코드, 급여, 급여등급 조회

    SELECT A .EMP_NAME, A. JOB_CODE, A. SALARY, A.SAL_LEVEL, B.AVG_SALARY
    FROM EMPLOYEE A
    JOIN  (SELECT JOB_CODE, AVG(SALARY) AS AVG_SALARY 
    FROM EMPLOYEE GROUP BY JOB_CODE) B ON A.JOB_CODE = B.JOB_CODE
    -- 여기서는 USING을 사용할 수없다.
    WHERE A.SALARY >= B.AVG_SALARY;
    
-- 문제 5. 부서별 평균 급여가 2200000 이상인 부서명, 평균 급여 조회
-- 단, 평균 급여는 소수점 버림, 부서명이 없는 경우 '인턴' 처리 X

SELECT DEPT_TITLE AS 부서명 , FLOOR(AVG(SALARY)) AS 평균급여
FROM EMPLOYEE E
JOIN (
    SELECT DEPT_CODE AS 부서코드, FLOOR(AVG(SALARY)) AS 평균
    FROM EMPLOYEE
    GROUP BY DEPT_CODE
) B ON E.DEPT_CODE = B.부서코드
JOIN DEPARTMENT D ON E.DEPT_CODE = D.DEPT_ID
GROUP BY DEPT_TITLE
HAVING  AVG(SALARY) > 2200000
ORDER BY 평균급여 DESC;

SELECT * FROM DEPARTMENT;
--문제6
--직급의 연봉 평균보다 적게 받는 여자사원의
--사원명,직급명,부서명,연봉을 이름 오름차순으로 조회하시오
--연봉 계산 => (급여+(급여*보너스))*12    
-- 사원명,직급명,부서명,연봉은 EMPLOYEE 테이블을 통해 출력이 가능함

-- USING 절에는 식별자를 사용할수 없다.
SELECT 
    E.EMP_NAME, 
    J.JOB_NAME, 
    D.DEPT_TITLE, 
    (E.SALARY + (E.SALARY * NVL(E.BONUS, 0))) * 12 AS 연봉
FROM EMPLOYEE E
JOIN JOB J ON E.JOB_CODE = J.JOB_CODE
JOIN DEPARTMENT D ON E.DEPT_CODE = D.DEPT_ID
JOIN (
    SELECT JOB_CODE, AVG(SALARY) AS AVG_SALARY
    FROM EMPLOYEE
    JOIN JOB USING (JOB_CODE)
    GROUP BY JOB_CODE
) A ON E.JOB_CODE = A.JOB_CODE
WHERE DECODE(SUBSTR(EMP_NO,8,1),2,'여') = '여'
ORDER BY 연봉 ;